<?php
// $Id: versioncontrol_git.install,v 1.19.2.4 2010/12/08 22:11:42 sdboyer Exp $
/**
 * @file
 * Git backend for Version Control API - Provides Git commit information and
 * account management as a pluggable backend.
 *
 * Copyright 2008 by Jimmy Berry ("boombatower", http://drupal.org/user/214218)
 * Copyright 2009 by Cornelius Riemenschneider ("CorniI", http://drupal.org/user/136353)
 */

/**
 * Implementation of hook_install().
 */
function versioncontrol_git_install() {
  // Create tables.
  drupal_install_schema('versioncontrol_git');
}

function versioncontrol_git_schema() {
  $schema = array();
  $schema['versioncontrol_git_operations'] = array(
    'description' => 'A one-to-one table extending {versioncontrol_operations} with some additional git-specific data.',
    'fields' => array(
      'vc_op_id' => array(
        'description' => 'Foreign key to {versioncontrol_operations}.vc_op_id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'author_name' => array(
        'description' => "Author's user.name field from a git commit or tag object.",
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'committer_name' => array(
        'description' => "Committer's user.name field from a git commit or tag object.",
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'parent_commit' => array(
        'description' => 'SHA-1 hash of the parent commit. Same as the value recorded in {versioncontrol_operations}.revision',
        'type' => 'char',
        'length' => 40,
        'not null' => TRUE,
        'default' => '',
      ),
      'merge' => array(
        'description' => 'Boolean indicating whether or not the operation is a merge commit.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('vc_op_id'),
  );

  return $schema;
}

function versioncontrol_git_update_6201() {
  $ret = array();

  $schema = array(
    'description' => 'A one-to-one table extending {versioncontrol_operations} with some additional git-specific data.',
    'fields' => array(
      'vc_op_id' => array(
        'description' => 'Foreign key to {versioncontrol_operations}.vc_op_id.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'author_name' => array(
        'description' => "Author's user.name field from a git commit or tag object.",
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'committer_name' => array(
        'description' => "Committer's user.name field from a git commit or tag object.",
        'type' => 'varchar',
        'length' => 64,
        'not null' => TRUE,
        'default' => '',
      ),
      'parent_commit' => array(
        'description' => 'SHA-1 hash of the parent commit. Same as the value recorded in {versioncontrol_operations}.revision',
        'type' => 'char',
        'length' => 40,
        'not null' => TRUE,
        'default' => '',
      ),
      'merge' => array(
        'description' => 'Boolean indicating whether or not the operation is a merge commit.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
    ),
    'primary key' => array('vc_op_id'),
  );

  db_create_table($ret, 'versioncontrol_git_operations', $schema);

  return $ret;
}